{"version":3,"sources":["webpack://Ainsley/webpack/universalModuleDefinition","webpack://Ainsley/webpack/bootstrap","webpack://Ainsley/./src/lib/utils.ts","webpack://Ainsley/./src/lib/generate.ts","webpack://Ainsley/./src/lib/embed.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isObject","x","Array","isArray","map","arr","fn","out","len","length","push","flat","concat","apply","combinations","mods","list","index","option","prev","assign","objects","obj","keys","memoize","func","cache","arg1","arg2","cacheKey","ITERATOR_REGEX","DEFAULT_OPTIONS","addVariationToSelector","selector","variationAbbreviation","addPropertyToSelector","propertyAbbreviation","toLowerCase","addValueToSelector","valueAbbreviation","toUpperCase","abbreviateProperty","propertyName","split","word","charAt","join","ITERATOR_SEARCH","RegExp","generate","ainsley","options","mergedOptions","memoizedOptions","generateFromAst","ainsleyToAst","ainsleyRules","ainsleyRule","declaration","inheritedVariables","newVariables","variables","variable","modAndBase","parseVariable","mod","base","rulesListWithoutVariants","undefined","children","ainsleyChildrenToAst","variations","variationSet","combination","reduce","prevAst","variation","variationInstruction","rule","ainsleyChildren","child","ainsleyRuleToAst","ainsleyPropertyToAst","declarations","variablesFound","propertyMatches","match","valueMatches","iteratorAndType","iterator","location","variableName","slice","abbreviation","combinationIndex","current","part","declarationPart","indexOf","replace","ainsleyProperty","propertyInput","propertyValues","propertyData","css","id","styleEl","document","querySelector","createElement","type","setAttribute","head","appendChild","innerHTML"],"mappings":"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","file":"ainsley.client.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Ainsley\"] = factory();\n\telse\n\t\troot[\"Ainsley\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","export const isObject = (x: any): boolean =>\n  !!(x !== null && typeof x === \"object\" && !Array.isArray(x));\n\nexport const map = (arr: any[], fn: (value: any) => any): any[] => {\n  const out = [];\n  const len = arr.length;\n  for (let i = 0; i < len; i++) out.push(fn(arr[i]));\n  return out;\n};\n\nexport const flat = (arr: any[][]) =>\n  // eslint-disable-next-line prefer-spread\n  ([] as any[]).concat.apply([], arr);\n\nexport const combinations = (mods: any[][]) => {\n  let list: any[][] = [[]];\n  let index = 0;\n  while (index < mods.length) {\n    list = flat(\n      map(mods[index++], (option) => list.map((prev) => prev.concat([option])))\n    );\n  }\n  return list;\n};\n\nexport const assign = (objects: Array<Record<string, any>>) => {\n  const out: Record<string, any> = {};\n  const len = objects.length;\n  for (let i = 0; i < len; i++) {\n    const obj = objects[i];\n    map(Object.keys(obj), (key) => {\n      out[key] = obj[key];\n    });\n  }\n  return out;\n};\n\nexport const toString = (value: any): string =>\n  typeof value === \"string\" ? value : (value as string) + \"\";\n\nexport const memoize = (func: (arg1: string, arg2?: string) => any): any => {\n  const cache: Record<string, any> = {};\n  return (arg1: string, arg2?: string) => {\n    const cacheKey = arg1 + \"{}\" + (arg2 as string);\n    if (!(cache[cacheKey] as boolean)) cache[cacheKey] = func(arg1, arg2);\n    return cache[cacheKey];\n  };\n};\n","import {\n  Ainsley,\n  AinsleyRule,\n  AinsleyPropertyOrPlaceholder,\n  AinsleyVariableMap,\n  AinsleyChild,\n  AinsleyChildren,\n  AinsleyAST,\n  AinsleyGenerateOptions\n} from \"../types\";\nimport { isObject, assign, flat, map, combinations, memoize } from \"./utils\";\n\nexport const ITERATOR_REGEX = \"\\\\{[a-zA-Z0-9_-]+\\\\}\";\nexport const DEFAULT_OPTIONS: AinsleyGenerateOptions = {\n  addVariationToSelector: (selector, variationAbbreviation) =>\n    variationAbbreviation + \"-\" + selector,\n  addPropertyToSelector: (selector, propertyAbbreviation) =>\n    selector + propertyAbbreviation.toLowerCase(),\n  addValueToSelector: (selector, valueAbbreviation) =>\n    selector + valueAbbreviation.toUpperCase(),\n  abbreviateProperty: (propertyName) => [\n    propertyName\n      .split(\"-\")\n      .map((word) => word.charAt(0))\n      .join(\"\")\n      .toLowerCase(),\n    propertyName.toLowerCase()\n  ]\n};\n\nconst ITERATOR_SEARCH = new RegExp(ITERATOR_REGEX, \"g\");\n\nexport const generate = (\n  ainsley: Ainsley,\n  options: Partial<AinsleyGenerateOptions> = {}\n): string => {\n  const mergedOptions = assign([\n    DEFAULT_OPTIONS,\n    options\n  ]) as AinsleyGenerateOptions;\n  const memoizedOptions: Partial<AinsleyGenerateOptions> = {};\n  map(Object.keys(mergedOptions), (key) => {\n    memoizedOptions[key as keyof AinsleyGenerateOptions] = memoize(\n      mergedOptions[key as keyof AinsleyGenerateOptions] as (\n        arg1: string,\n        arg2?: string\n      ) => any\n    );\n  });\n  return generateFromAst(\n    ainsleyToAst(ainsley, memoizedOptions as AinsleyGenerateOptions, {})\n  );\n};\n\nexport const generateFromAst = (ainsleyRules: AinsleyAST): string =>\n  map(\n    ainsleyRules,\n    (ainsleyRule: string | AinsleyRule | [string, AinsleyAST]) => {\n      if (typeof ainsleyRule === \"string\") {\n        return ainsleyRule;\n      } else if (ainsleyRule[0].charAt(0) === \"@\") {\n        return (\n          ainsleyRule[0] + \"{\" + generateFromAst(ainsleyRule[1] as any) + \"}\"\n        );\n      } else {\n        return (\n          \".\" +\n          ainsleyRule[0] +\n          \"{\" +\n          map(\n            ainsleyRule[1],\n            (declaration: [string, string]) =>\n              declaration[0] + \":\" + declaration[1]\n          ).join(\";\") +\n          \"}\"\n        );\n      }\n    }\n  ).join(\"\");\n\nconst ainsleyToAst = (\n  ainsley: Ainsley,\n  options: AinsleyGenerateOptions,\n  inheritedVariables: AinsleyVariableMap\n): AinsleyAST => {\n  // first, compute variables\n  const newVariables = assign([inheritedVariables]);\n  if (isObject(ainsley.variables)) {\n    const variables = ainsley.variables as AinsleyVariableMap;\n    map(Object.keys(variables), (variable: string) => {\n      const modAndBase = parseVariable(variable);\n      const mod = modAndBase[0];\n      const base = modAndBase[1];\n      if (mod === 0) {\n        newVariables[base] = variables[variable];\n      } else if (mod === 2) {\n        newVariables[base] = assign([\n          inheritedVariables[base],\n          variables[variable]\n        ]);\n      }\n    });\n  }\n\n  // then, flatten children into ast\n  const rulesListWithoutVariants =\n    ainsley.children === undefined\n      ? []\n      : ainsleyChildrenToAst(ainsley.children, options, newVariables);\n\n  // lastly, multiply ast with variations\n  const rulesList: AinsleyAST = flat(\n    map(\n      combinations(\n        map(ainsley.variations ?? [], (variationSet) =>\n          [[\"\", \"\"]].concat(variationSet)\n        )\n      ),\n      (combination) =>\n        combination.reduce(\n          (prevAst: AinsleyAST, variation: [string, string]) => {\n            const variationAbbreviation = variation[0];\n            const variationInstruction = variation[1];\n\n            if (variationInstruction === \"\") {\n              return prevAst;\n            } else if (variationInstruction.charAt(0) === \"@\") {\n              return [\n                [\n                  variationInstruction,\n                  map(prevAst, (rule: AinsleyRule) =>\n                    typeof rule === \"string\"\n                      ? rule\n                      : [\n                          options.addVariationToSelector(\n                            rule[0],\n                            variationAbbreviation\n                          ),\n                          rule[1]\n                        ]\n                  )\n                ]\n              ];\n            } else {\n              return map(prevAst, (rule: AinsleyRule) =>\n                typeof rule === \"string\"\n                  ? rule\n                  : [\n                      options.addVariationToSelector(\n                        rule[0],\n                        variationAbbreviation\n                      ) + variationInstruction,\n                      rule[1]\n                    ]\n              );\n            }\n          },\n          rulesListWithoutVariants\n        )\n    )\n  );\n\n  return rulesList;\n};\n\nconst ainsleyChildrenToAst = (\n  ainsleyChildren: AinsleyChildren,\n  options: AinsleyGenerateOptions,\n  variables: AinsleyVariableMap\n): AinsleyAST =>\n  flat(\n    map(ainsleyChildren, (child: AinsleyChild) => {\n      if (typeof child === \"string\") {\n        return [child];\n      } else if (isObject(child)) {\n        return ainsleyToAst(child as Ainsley, options, variables);\n      } else {\n        child = child as AinsleyRule | AinsleyPropertyOrPlaceholder;\n        if (Array.isArray(child[1])) {\n          return ainsleyRuleToAst(child as AinsleyRule, options, variables);\n        } else {\n          return ainsleyPropertyToAst(\n            child as AinsleyPropertyOrPlaceholder,\n            options\n          );\n        }\n      }\n    })\n  );\n\nconst ainsleyRuleToAst = (\n  ainsleyRule: AinsleyRule,\n  options: AinsleyGenerateOptions,\n  variables: AinsleyVariableMap\n): AinsleyAST => {\n  const selector = ainsleyRule[0];\n  const declarations = ainsleyRule[1];\n  const variablesFound: Array<[string, number]> = [];\n  map(declarations, (declaration) => {\n    const propertyMatches =\n      ((declaration[0] as string) + \"\").match(ITERATOR_SEARCH) ?? [];\n    const valueMatches =\n      ((declaration[1] as string) + \"\").match(ITERATOR_SEARCH) ?? [];\n    map(propertyMatches, (match) => variablesFound.push([match, 0]));\n    map(valueMatches, (match) => variablesFound.push([match, 1]));\n  });\n\n  return map(\n    combinations(\n      map(variablesFound, (iteratorAndType: [string, number]) => {\n        const iterator = iteratorAndType[0];\n        const location = iteratorAndType[1];\n        const variableName = iterator.slice(1, -1);\n        return map(Object.keys(variables[variableName]), (abbreviation) => [\n          iterator,\n          abbreviation,\n          variables[variableName][abbreviation],\n          location\n        ]);\n      })\n    ),\n    (combination) => {\n      let combinationIndex = 0;\n      let current: [string, string, string | number, number] =\n        combination[combinationIndex];\n\n      return [\n        combination.reduce(\n          (\n            selector: string,\n            part: [string, string, string | number, number]\n          ) => {\n            if (part[3] === 0) {\n              return options.addPropertyToSelector(selector, part[1]);\n            } /* if (part[3] === 1) */ else {\n              return options.addValueToSelector(selector, part[1]);\n            }\n          },\n          selector\n        ),\n        map(declarations, (declaration) =>\n          map(declaration, (declarationPart) => {\n            while (\n              current !== undefined &&\n              declarationPart.indexOf(current[0]) !== -1\n            ) {\n              declarationPart = declarationPart.replace(current[0], current[2]);\n              current = combination[++combinationIndex];\n            }\n            return declarationPart;\n          })\n        )\n      ];\n    }\n  );\n};\n\nconst ainsleyPropertyToAst = (\n  ainsleyProperty: AinsleyPropertyOrPlaceholder,\n  options: AinsleyGenerateOptions\n): AinsleyAST => {\n  const propertyInput = ainsleyProperty[0];\n  const propertyValues = ainsleyProperty[1];\n\n  const propertyData: [string, string] = options.abbreviateProperty(\n    propertyInput\n  );\n  const propertyAbbreviation = propertyData[0];\n  const propertyName = propertyData[1];\n\n  return map(Object.keys(propertyValues), (valueAbbreviation: string) => [\n    options.addValueToSelector(\n      options.addPropertyToSelector(\"\", propertyAbbreviation),\n      valueAbbreviation\n    ),\n    [[propertyName, propertyValues[valueAbbreviation]]]\n  ]);\n};\n\nconst parseVariable = (variable: string): [number, string] => {\n  const mod = \"?+\".indexOf(variable[0]) + 1;\n  const base = mod > 0 ? variable.slice(1) : variable;\n  return [mod, base];\n};\n","// singleton embed pattern, using id as the unique identifier\nexport const embed = (css: string, id?: string): void => {\n  let styleEl: HTMLStyleElement | null = null;\n  if (id !== undefined) styleEl = document.querySelector(`style#${id}`);\n\n  if (styleEl === null) {\n    styleEl = document.createElement(\"style\");\n    styleEl.type = \"text/css\";\n    if (id !== undefined) styleEl.setAttribute(\"id\", id);\n    document.head.appendChild(styleEl);\n  }\n\n  styleEl.innerHTML = css;\n};\n"],"sourceRoot":""}