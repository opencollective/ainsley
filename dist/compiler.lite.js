const t=/\{[a-z]+\}/gi,e=t=>{let e=[[]];for(;t.length;)e=t.shift().flatMap(t=>e.map(e=>[...e,t]));return e},a={flex:"fx",background:"bg",min:"n",max:"x",style:"st",overflow:"ov",cursor:"cu"},o=([t,e])=>{const o=t.split("-").map(t=>a[t]||t[0]).join("");return e.map(e=>[`${o}${e.split(" ").map(t=>t[0].toUpperCase()).join("")}`,[[t,e]]])},r=a=>{const r=[...(a.defs||[]).flatMap(o=>((a,o)=>{let[r,p]=o;const n=[[],[]];for(let[e,a]of p){const o=e.match(t);o&&n[0].push(...o);const r=a.match(t);r&&n[1].push(...r)}return e(n.flat().map(t=>Object.entries(a[t]).map(([e,a])=>[t,e,a]))).map(t=>{const e=[r,p.map(t=>[...t])];for(let a=0;e[0].includes("&");a++)e[0]=e[0].replace("&",t[a][1]);for(let a of e[1])for(;t.length>0&&a[0].includes(t[0][0]);){const[e,,o]=t.shift();a[0]=a[0].replace(e,o)}for(let a of e[1])for(;t.length>0&&a[1].includes(t[0][0]);){const[e,,o]=t.shift();a[1]=a[1].replace(e,o)}return e})})(a,o)),...(a.props||[]).flatMap(o),...a.raw||[]];return e((a.mods||[]).map(t=>[["",""],...t])).flatMap(t=>t.reduce((t,[e,a])=>a?"@"===a[0]?[[a,t.map(([t,a])=>[`${e}${t}`,a])]]:t.map(([t,o])=>[`${e}${t}${a}`,o]):t,r))},p=t=>t.map(([t,e])=>"@"===t[0]?`${t}{${p(e)}}`:`.${t}{${e.map(([t,e])=>`${t}:${e}`).join(";")}}`).join("");export default t=>p(r(t));
