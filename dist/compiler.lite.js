import t from"accb";const e=t=>{if("object"!=typeof t)return t;const o=[],n=t.length;for(let c=0;c<n;c++)o.push(e(t[c]));return o},o=(t,e)=>{const o=[],n=t.length;for(let c=0;c<n;c++)o.push(e(t[c]));return o},n=t=>[].concat.apply([],t),c=t=>{let e=[[]];for(console.log(t.length,t);t.length;)e=n(t.shift().map(t=>e.map(e=>e.concat([t]))));return e},r={flex:"fx",background:"bg",min:"n",max:"x",style:"st",overflow:"ov",cursor:"cu"},s=/\{[a-z]+\}/gi,l=t=>r[t]||t[0],a=t=>`${t[0]}:${t[1]}`,f=t=>[["",""]].concat(t),u=t=>{const e=o(t[0].split("-"),l).join("");return o(t[1],n=>[`${e}${o(n.split(" "),t=>t[0].toUpperCase()).join("")}`,[[t[0],n]]])},p=t=>{const r=[].concat(n(o(t.defs||[],n=>((t,n)=>{const r=n[1].reduce((t,e)=>[t[0].concat(e[0].match(s)||[]),t[1].concat(e[1].match(s)||[])],[[],[]]);return o(c(o(r[0].concat(r[1]),e=>o(Object.keys(t[e]),o=>[e,o,t[e][o]]))),t=>{const o=e(n);for(let e=0;o[0].includes("&");e++)o[0]=o[0].replace("&",t[e][1]);for(let e=0;e<o[1].length;e++){const n=o[1][e];for(;t.length>0&&n[0].includes(t[0][0]);){const e=t.shift();n[0]=n[0].replace(e[0],e[2])}}for(let e=0;e<o[1].length;e++){const n=o[1][e];for(;t.length>0&&n[1].includes(t[0][0]);){const e=t.shift();n[1]=n[1].replace(e[0],e[2])}}return o})})(t,n))),n(o(t.props||[],u)),t.raw||[]);return n(o(c(o(t.mods||[],f)),t=>t.reduce((t,e)=>e[1]?"@"===e[1][0]?[[e[1],o(t,t=>[`${e[0]}${t[0]}`,t[1]])]]:o(t,t=>[`${e[0]}${t[0]}${e[1]}`,t[1]]):t,r)))},i=t=>"@"===t[0][0]?`${t[0]}{${h(t[1])}}`:`.${t[0]}{${o(t[1],a).join(";")}}`,h=t=>o(t,i).join(""),$=t=>h(p(t));t&&t($);export default $;
//# sourceMappingURL=compiler.lite.js.map
