{"version":3,"file":"compiler.lite.js","sources":["../src/src/utils.js","../src/compiler.js"],"sourcesContent":[null,"import { fastClone, map, flat, combinations, toString } from \"./utils\";\n\nexport const propFragMap = {\n  flex: \"fx\",\n  background: \"bg\",\n  min: \"n\",\n  max: \"x\",\n  style: \"st\",\n  overflow: \"ov\",\n  cursor: \"cu\"\n};\n\nexport const iteratorRegex = /\\{[a-z]+\\}/gi;\n\n// private constants\nconst _hyphenOrDigitRegex = /-|[^0-9]/g;\nconst _notUpperOrDigitRegex = /[^A-Z0-9]/g;\n\n// private helpers\nconst _abbrev = w => propFragMap[w] || w[0];\nconst _expandDeclaration = subpair => `${subpair[0]}:${subpair[1]}`;\nconst _addEmptyMod = mod => [[\"\", \"\"]].concat(mod);\nconst _abbrevWord = w => w[0].toUpperCase();\nconst _toCase = (s, upper) => s[\"to\" + (upper ? \"Upp\" : \"Low\") + \"erCase\"]();\nconst _toPair = (input, isValue) => {\n  if (typeof input === \"number\") {\n    const str = toString(input);\n    return [\n      str.replace(_hyphenOrDigitRegex, match => (match === \"-\" ? \"N\" : \"\")),\n      str\n    ];\n  } else {\n    return [\n      _toCase(input.replace(_notUpperOrDigitRegex, \"\"), isValue),\n      _toCase(input, false)\n    ];\n  }\n};\nconst _toPairs = (inputs, isValue) =>\n  inputs.length\n    ? map(inputs, input => _toPair(input, isValue))\n    : map(Object.keys(inputs), key => [toString(key), toString(inputs[key])]);\n\n// expand ainsley.defs\nexport const expandDefs = (ainsley, ruleSet) => {\n  const pair = ruleSet[1].reduce(\n    (iters, pair) => [\n      iters[0].concat(toString(pair[0]).match(iteratorRegex) || []),\n      iters[1].concat(toString(pair[1]).match(iteratorRegex) || [])\n    ],\n    [[], []]\n  );\n\n  return map(\n    combinations(\n      flat([\n        map(pair[0], iter =>\n          map(_toPairs(ainsley[iter]), pair => [iter, pair[0], pair[1]])\n        ),\n        map(pair[1], iter =>\n          map(_toPairs(ainsley[iter], true), pair => [iter, pair[0], pair[1]])\n        )\n      ])\n    ),\n    perm => {\n      const clone = fastClone(ruleSet);\n      for (let i = 0; clone[0].includes(\"&\"); i++) {\n        clone[0] = clone[0].replace(\"&\", perm[i][1]);\n      }\n      for (let i = 0; i < clone[1].length; i++) {\n        const decl = clone[1][i];\n        while (perm.length > 0 && decl[0].includes(perm[0][0])) {\n          const first = perm.shift();\n          decl[0] = decl[0].replace(first[0], first[2]);\n        }\n      }\n      for (let i = 0; i < clone[1].length; i++) {\n        const decl = clone[1][i];\n        while (perm.length > 0 && decl[1].includes(perm[0][0])) {\n          const first = perm.shift();\n          decl[1] = decl[1].replace(first[0], first[2]);\n        }\n      }\n      return clone;\n    }\n  );\n};\n\n// expand ainsley.props\nexport const expandProps = pair => {\n  const prop = _toPairs([pair[0]])[0];\n\n  map(pair[0].split(\"-\"), _abbrev).join(\"\");\n  return map(_toPairs(pair[1], true), subpair => [\n    `${prop[0]}${subpair[0]}`,\n    [[prop[1], subpair[1]]]\n  ]);\n};\n\n// compile ainsley to a simple stylesheet ast\nexport const ainsleyToAST = ainsley => {\n  const ast = [].concat(\n    flat(map(ainsley.defs || [], def => expandDefs(ainsley, def))),\n    flat(map(ainsley.props || [], expandProps)),\n    ainsley.raw || []\n  );\n  return flat(\n    map(combinations(map(ainsley.mods || [], _addEmptyMod)), comb =>\n      comb.reduce((ast, pair) => {\n        if (!pair[1]) {\n          return ast;\n        } else if (pair[1][0] === \"@\") {\n          return [\n            [\n              pair[1],\n              map(ast, subpair => [`${pair[0]}${subpair[0]}`, subpair[1]])\n            ]\n          ];\n        } else {\n          return map(ast, subpair => [\n            `${pair[0]}${subpair[0]}${pair[1]}`,\n            subpair[1]\n          ]);\n        }\n      }, ast)\n    )\n  );\n};\n\nexport const ruleToCSS = rule =>\n  rule[0][0] === \"@\"\n    ? `${rule[0]}{${astToCSS(rule[1])}}`\n    : `.${rule[0]}{${map(rule[1], _expandDeclaration).join(\";\")}}`;\n\n// generate css from simple stylesheet ast\nexport const astToCSS = ast => map(ast, ruleToCSS).join(\"\");\n\n// generate css from ainsley\nexport const ainsleyToCSS = ainsley => astToCSS(ainsleyToAST(ainsley));\n\n// insert ainsley into a dom\nexport const ainsleyInsert = (ainsley, stylesheet) => {\n  const ast = ainsleyToAST(ainsley);\n  for (let i = ast.length - 1; i >= 0; i--) {\n    stylesheet.insertRule(ruleToCSS(ast[i]), 0);\n  }\n};\n"],"names":["fastClone","val","arr","len","length","i","push","map","fn","out","flat","concat","apply","combinations","mods","list","shift","opt","prev","toString","value","propFragMap","flex","background","min","max","style","overflow","cursor","iteratorRegex","_hyphenOrDigitRegex","_notUpperOrDigitRegex","_abbrev","w","_expandDeclaration","subpair","_addEmptyMod","mod","_toCase","s","upper","_toPairs","inputs","isValue","input","str","replace","match","_toPair","Object","keys","key","expandProps","pair","prop","split","join","ainsleyToAST","ainsley","ast","defs","def","ruleSet","reduce","iters","iter","perm","clone","includes","decl","first","expandDefs","props","raw","comb","ruleToCSS","rule","astToCSS"],"mappings":"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"}