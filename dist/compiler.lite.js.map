{"version":3,"file":"compiler.lite.js","sources":["../src/src/utils.js","../src/compiler.js"],"sourcesContent":[null,"import { fastClone, map, flat, combinations } from \"./utils\";\n\nexport const propFragMap = {\n  flex: \"fx\",\n  background: \"bg\",\n  min: \"n\",\n  max: \"x\",\n  style: \"st\",\n  overflow: \"ov\",\n  cursor: \"cu\"\n};\n\nexport const iteratorRegex = /\\{[a-z]+\\}/gi;\n\n// private helpers\nconst _abbrev = w => propFragMap[w] || w[0];\nconst _expandDeclaration = subpair => `${subpair[0]}:${subpair[1]}`;\nconst _addEmptyMod = mod => [[\"\", \"\"]].concat(mod);\nconst _abbrevWord = w => w[0].toUpperCase();\n\n// expand ainsley.defs\nexport const expandDefs = (ainsley, ruleSet) => {\n  const pair = ruleSet[1].reduce(\n    (iters, pair) => [\n      iters[0].concat(pair[0].match(iteratorRegex) || []),\n      iters[1].concat(pair[1].match(iteratorRegex) || [])\n    ],\n    [[], []]\n  );\n\n  return map(\n    combinations(\n      map(pair[0].concat(pair[1]), iter =>\n        map(Object.keys(ainsley[iter]), abbr => [\n          iter,\n          abbr,\n          ainsley[iter][abbr]\n        ])\n      )\n    ),\n    perm => {\n      const clone = fastClone(ruleSet);\n      for (let i = 0; clone[0].includes(\"&\"); i++) {\n        clone[0] = clone[0].replace(\"&\", perm[i][1]);\n      }\n      for (let i = 0; i < clone[1].length; i++) {\n        const decl = clone[1][i];\n        while (perm.length > 0 && decl[0].includes(perm[0][0])) {\n          const first = perm.shift();\n          decl[0] = decl[0].replace(first[0], first[2]);\n        }\n      }\n      for (let i = 0; i < clone[1].length; i++) {\n        const decl = clone[1][i];\n        while (perm.length > 0 && decl[1].includes(perm[0][0])) {\n          const first = perm.shift();\n          decl[1] = decl[1].replace(first[0], first[2]);\n        }\n      }\n      return clone;\n    }\n  );\n};\n\n// expand ainsley.props\nexport const expandProps = pair => {\n  const propAbbrev = map(pair[0].split(\"-\"), _abbrev).join(\"\");\n  return map(pair[1], value => [\n    `${propAbbrev}${map(value.split(\" \"), _abbrevWord).join(\"\")}`,\n    [[pair[0], value]]\n  ]);\n};\n\n// compile ainsley to a simple stylesheet ast\nexport const ainsleyToAst = ainsley => {\n  const ast = [].concat(\n    flat(map(ainsley.defs || [], def => expandDefs(ainsley, def))),\n    flat(map(ainsley.props || [], expandProps)),\n    ainsley.raw || []\n  );\n  return flat(\n    map(combinations(map(ainsley.mods || [], _addEmptyMod)), comb =>\n      comb.reduce((ast, pair) => {\n        if (!pair[1]) {\n          return ast;\n        } else if (pair[1][0] === \"@\") {\n          return [\n            [\n              pair[1],\n              map(ast, subpair => [`${pair[0]}${subpair[0]}`, subpair[1]])\n            ]\n          ];\n        } else {\n          return map(ast, subpair => [\n            `${pair[0]}${subpair[0]}${pair[1]}`,\n            subpair[1]\n          ]);\n        }\n      }, ast)\n    )\n  );\n};\n\nexport const ruleToCSS = rule =>\n  rule[0][0] === \"@\"\n    ? `${rule[0]}{${astToCss(rule[1])}}`\n    : `.${rule[0]}{${map(rule[1], _expandDeclaration).join(\";\")}}`;\n\n// generate css from simple stylesheet ast\nexport const astToCss = ast => map(ast, ruleToCSS).join(\"\");\n\n// generate css from ainsley\nexport const ainsleyToCss = ainsley => astToCss(ainsleyToAst(ainsley));\n\n// insert ainsley into a dom\nexport const ainsleyInsert = (ainsley, stylesheet) => {\n  const ast = ainsleyToAst(ainsley);\n  for (let i = ast.length - 1; i >= 0; i--) {\n    stylesheet.insertRule(ruleToCSS(ast[i]), 0);\n  }\n};\n\nif (globalThis.ACCB) globalThis.ACCB(ainsleyToCss);\n"],"names":["fastClone","val","arr","len","length","i","push","map","fn","out","flat","concat","apply","combinations","mods","list","shift","opt","prev","propFragMap","flex","background","min","max","style","overflow","cursor","iteratorRegex","_abbrev","w","_expandDeclaration","subpair","_addEmptyMod","mod","_abbrevWord","toUpperCase","expandProps","pair","propAbbrev","split","join","value","ainsleyToAst","ainsley","ast","defs","def","ruleSet","reduce","iters","match","iter","Object","keys","abbr","perm","clone","includes","replace","decl","first","expandDefs","props","raw","comb","ruleToCSS","rule","astToCss","ainsleyToCss","globalThis","ACCB"],"mappings":"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"}