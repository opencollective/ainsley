{"version":3,"file":"compiler.lite.es5.js","sources":["../src/utils.js","../src/compiler.js"],"sourcesContent":["export const fastClone = val => {\n  if (typeof val !== \"object\") return val;\n  const arr = [];\n  const len = val.length;\n  for (let i = 0; i < len; i++) arr.push(fastClone(val[i]));\n  return arr;\n};\n\nexport const map = (arr, fn) => {\n  const out = [];\n  const len = arr.length;\n  for (let i = 0; i < len; i++) out.push(fn(arr[i]));\n  return out;\n};\n\nexport const flat = arr => [].concat.apply([], arr);\n\nexport const combinations = mods => {\n  let list = [[]];\n  while (mods.length)\n    list = flat(mods.shift().map(opt => list.map(prev => prev.concat([opt]))));\n  return list;\n};\n","//#if _CB\nimport ACCB from \"ACCB\";\n//#endif\n\nimport { fastClone, map, flat, combinations } from \"./utils\";\n\nexport const propFragMap = {\n  flex: \"fx\",\n  background: \"bg\",\n  min: \"n\",\n  max: \"x\",\n  style: \"st\",\n  overflow: \"ov\",\n  cursor: \"cu\"\n};\n\nexport const iteratorRegex = /\\{[a-z]+\\}/gi;\n\n// private helpers\nconst _abbrev = w => propFragMap[w] || w[0];\nconst _expandDeclaration = subpair => `${subpair[0]}:${subpair[1]}`;\nconst _addEmptyMod = mod => [[\"\", \"\"]].concat(mod);\nconst _abbrevWord = w => w[0].toUpperCase();\n\n// expand ainsley.defs\nexport const expandDefs = (ainsley, ruleSet) => {\n  const pair = ruleSet[1].reduce(\n    (iters, pair) => [\n      iters[0].concat(pair[0].match(iteratorRegex) || []),\n      iters[1].concat(pair[1].match(iteratorRegex) || [])\n    ],\n    [[], []]\n  );\n\n  return map(\n    combinations(\n      map(pair[0].concat(pair[1]), iter =>\n        map(Object.keys(ainsley[iter]), abbr => [\n          iter,\n          abbr,\n          ainsley[iter][abbr]\n        ])\n      )\n    ),\n    perm => {\n      const clone = fastClone(ruleSet);\n      for (let i = 0; clone[0].includes(\"&\"); i++) {\n        clone[0] = clone[0].replace(\"&\", perm[i][1]);\n      }\n      for (let i = 0; i < clone[1].length; i++) {\n        const decl = clone[1][i];\n        while (perm.length > 0 && decl[0].includes(perm[0][0])) {\n          const first = perm.shift();\n          decl[0] = decl[0].replace(first[0], first[2]);\n        }\n      }\n      for (let i = 0; i < clone[1].length; i++) {\n        const decl = clone[1][i];\n        while (perm.length > 0 && decl[1].includes(perm[0][0])) {\n          const first = perm.shift();\n          decl[1] = decl[1].replace(first[0], first[2]);\n        }\n      }\n      return clone;\n    }\n  );\n};\n\n// expand ainsley.props\nexport const expandProps = pair => {\n  const propAbbrev = map(pair[0].split(\"-\"), _abbrev).join(\"\");\n  return map(pair[1], value => [\n    `${propAbbrev}${map(value.split(\" \"), _abbrevWord).join(\"\")}`,\n    [[pair[0], value]]\n  ]);\n};\n\n// compile ainsley to a simple stylesheet ast\nexport const ainsleyToAst = ainsley => {\n  const ast = [].concat(\n    flat(map(ainsley.defs || [], def => expandDefs(ainsley, def))),\n    flat(map(ainsley.props || [], expandProps)),\n    ainsley.raw || []\n  );\n  return flat(\n    map(combinations(map(ainsley.mods || [], _addEmptyMod)), comb =>\n      comb.reduce((ast, pair) => {\n        if (!pair[1]) {\n          return ast;\n        } else if (pair[1][0] === \"@\") {\n          return [\n            [\n              pair[1],\n              map(ast, subpair => [`${pair[0]}${subpair[0]}`, subpair[1]])\n            ]\n          ];\n        } else {\n          return map(ast, subpair => [\n            `${pair[0]}${subpair[0]}${pair[1]}`,\n            subpair[1]\n          ]);\n        }\n      }, ast)\n    )\n  );\n};\n\nexport const ruleToCSS = rule =>\n  rule[0][0] === \"@\"\n    ? `${rule[0]}{${astToCss(rule[1])}}`\n    : `.${rule[0]}{${map(rule[1], _expandDeclaration).join(\";\")}}`;\n\n// generate css from simple stylesheet ast\nexport const astToCss = ast => map(ast, ruleToCSS).join(\"\");\n\n// generate css from ainsley\nexport const ainsleyToCss = ainsley => astToCss(ainsleyToAst(ainsley));\n\n// insert ainsley into a dom\nexport const ainsleyInsert = (ainsley, stylesheet) => {\n  const ast = ainsleyToAst(ainsley);\n  for (let i = ast.length - 1; i >= 0; i--) {\n    stylesheet.insertRule(ruleToCSS(ast[i]), 0);\n  }\n};\n\n//#if _CB\nif (ACCB) ACCB(ainsleyToCss);\n//#endif\n"],"names":["fastClone","val","arr","len","length","i","push","map","fn","out","flat","concat","apply","combinations","mods","list","shift","opt","prev","propFragMap","flex","background","min","max","style","overflow","cursor","iteratorRegex","_abbrev","w","_expandDeclaration","subpair","_addEmptyMod","mod","_abbrevWord","toUpperCase","expandDefs","ainsley","ruleSet","pair","reduce","iters","match","iter","Object","keys","abbr","perm","clone","includes","replace","decl","first","expandProps","propAbbrev","split","join","value","ainsleyToAst","ast","defs","def","props","raw","comb","ruleToCSS","rule","astToCss","ainsleyToCss","ACCB"],"mappings":"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"}