"use strict";const t=/\{[a-z]+\}/gi,c=t=>{let c=[[]];for(;t.length;)c=t.shift().flatMap(t=>c.map(c=>[...c,t]));return c},o={flex:"fx",background:"bg",min:"n",max:"x",style:"st",overflow:"ov",cursor:"cu"},a=([t,c])=>{const a=t.split("-").map(t=>o[t]||t[0]).join("");return c.map(c=>["".concat(a).concat(c.split(" ").map(t=>t[0].toUpperCase()).join("")),[[t,c]]])},n=o=>{const n=[...(o.defs||[]).flatMap(a=>((o,a)=>{let[n,e]=a;const r=[[],[]];for(let[c,o]of e){const a=c.match(t);a&&r[0].push(...a);const n=o.match(t);n&&r[1].push(...n)}return c(r.flat().map(t=>Object.entries(o[t]).map(([c,o])=>[t,c,o]))).map(t=>{const c=[n,e.map(t=>[...t])];for(let o=0;c[0].includes("&");o++)c[0]=c[0].replace("&",t[o][1]);for(let o of c[1])for(;t.length>0&&o[0].includes(t[0][0]);){const[c,,a]=t.shift();o[0]=o[0].replace(c,a)}for(let o of c[1])for(;t.length>0&&o[1].includes(t[0][0]);){const[c,,a]=t.shift();o[1]=o[1].replace(c,a)}return c})})(o,a)),...(o.props||[]).flatMap(a),...o.raw||[]];return c((o.mods||[]).map(t=>[["",""],...t])).flatMap(t=>t.reduce((t,[c,o])=>o?"@"===o[0]?[[o,t.map(([t,o])=>["".concat(c).concat(t),o])]]:t.map(([t,a])=>["".concat(c).concat(t).concat(o),a]):t,n))},e=t=>t.map(([t,c])=>"@"===t[0]?"".concat(t,"{").concat(e(c),"}"):".".concat(t,"{").concat(c.map(([t,c])=>"".concat(t,":").concat(c)).join(";"),"}")).join("");module.exports=t=>e(n(t));
