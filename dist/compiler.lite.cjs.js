"use strict";const t=/\{[a-z]+\}/gi,e=t=>[].concat.apply([],t),c=t=>{let c=[[]];for(;t.length;)c=e(t.shift().map(t=>c.map(e=>e.concat([t]))));return c},n={flex:"fx",background:"bg",min:"n",max:"x",style:"st",overflow:"ov",cursor:"cu"},o=t=>{const e=t[0].split("-").map(t=>n[t]||t[0]).join("");return t[1].map(c=>[`${e}${c.split(" ").map(t=>t[0].toUpperCase()).join("")}`,[[t[0],c]]])},a=n=>{const a=[].concat(e((n.defs||[]).map(e=>((e,n)=>{let o=[],a=[];return n[1].forEach(e=>{o=o.concat(e[0].match(t)||[]),a=a.concat(e[1].match(t)||[])}),c(o.concat(a).map(t=>Object.keys(e[t]).map(c=>[t,c,e[t][c]]))).map(t=>{const e=JSON.parse(JSON.stringify(n));for(let c=0;e[0].includes("&");c++)e[0]=e[0].replace("&",t[c][1]);for(let c=0;c<e[1].length;c++){const n=e[1][c];for(;t.length>0&&n[0].includes(t[0][0]);){const e=t.shift();n[0]=n[0].replace(e[0],e[2])}}for(let c=0;c<e[1].length;c++){const n=e[1][c];for(;t.length>0&&n[1].includes(t[0][0]);){const e=t.shift();n[1]=n[1].replace(e[0],e[2])}}return e})})(n,e))),e((n.props||[]).map(o)),n.raw||[]);return e(c((n.mods||[]).map(t=>[["",""]].concat(t))).map(t=>t.reduce((t,e)=>e[1]?"@"===e[1][0]?[[e[1],t.map(t=>[`${e[0]}${t[0]}`,t[1]])]]:t.map(t=>[`${e[0]}${t[0]}${e[1]}`,t[1]]):t,a)))},r=t=>t.map(t=>"@"===t[0][0]?`${t[0]}{${r(t[1])}}`:`.${t[0]}{${t[1].map(t=>t.join(":")).join(";")}}`).join("");module.exports=t=>r(a(t));
