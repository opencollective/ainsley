"use strict";const t=/\{[a-z]+\}/gi,e=t=>{let e=[[]];for(;t.length;)e=t.shift().flatMap(t=>e.map(e=>[...e,t]));return e},o={flex:"fx",background:"bg",min:"n",max:"x",style:"st",overflow:"ov",cursor:"cu"},a=([t,e])=>{const a=t.split("-").map(t=>o[t]||t[0]).join("");return e.map(e=>[`${a}${e.split(" ").map(t=>t[0].toUpperCase()).join("")}`,[[t,e]]])},r=o=>{const r=[...(o.defs||[]).flatMap(a=>((o,a)=>{let[r,s]=a;const p=[[],[]];for(let[e,o]of s){const a=e.match(t);a&&p[0].push(...a);const r=o.match(t);r&&p[1].push(...r)}return e(p.flat().map(t=>Object.entries(o[t]).map(([e,o])=>[t,e,o]))).map(t=>{const e=[r,s.map(t=>[...t])];for(let o=0;e[0].includes("&");o++)e[0]=e[0].replace("&",t[o][1]);for(let o of e[1])for(;t.length>0&&o[0].includes(t[0][0]);){const[e,,a]=t.shift();o[0]=o[0].replace(e,a)}for(let o of e[1])for(;t.length>0&&o[1].includes(t[0][0]);){const[e,,a]=t.shift();o[1]=o[1].replace(e,a)}return e})})(o,a)),...(o.props||[]).flatMap(a),...o.raw||[]];return e((o.mods||[]).map(t=>[["",""],...t])).flatMap(t=>t.reduce((t,[e,o])=>o?"@"===o[0]?[[o,t.map(([t,o])=>[`${e}${t}`,o])]]:t.map(([t,a])=>[`${e}${t}${o}`,a]):t,r))},s=t=>t.map(([t,e])=>"@"===t[0]?`${t}{${s(e)}}`:`.${t}{${e.map(([t,e])=>`${t}:${e}`).join(";")}}`).join("");module.exports=t=>s(r(t));
