{"version":3,"file":"compiler.cjs.js","sources":["../src/utils.js","../src/compiler.js"],"sourcesContent":["export const fastClone = val => {\n  if (typeof val !== \"object\") return val;\n  const arr = [];\n  const len = val.length;\n  for (let i = 0; i < len; i++) arr.push(fastClone(val[i]));\n  return arr;\n};\n\nexport const map = (arr, fn) => {\n  const out = [];\n  const len = arr.length;\n  for (let i = 0; i < len; i++) out.push(fn(arr[i]));\n  return out;\n};\n\nexport const flat = arr => [].concat.apply([], arr);\n\nexport const combinations = mods => {\n  let list = [[]];\n  console.log(mods.length, mods);\n  while (mods.length)\n    list = flat(mods.shift().map(opt => list.map(prev => prev.concat([opt]))));\n  return list;\n};\n","import callback from \"accb\";\nimport { fastClone, map, flat, combinations } from \"./utils\";\n\nexport const propFragMap = {\n  flex: \"fx\",\n  background: \"bg\",\n  min: \"n\",\n  max: \"x\",\n  style: \"st\",\n  overflow: \"ov\",\n  cursor: \"cu\"\n};\n\nexport const iteratorRegex = /\\{[a-z]+\\}/gi;\n\n// private helpers\nconst _abbrev = w => propFragMap[w] || w[0];\nconst _expandDeclaration = subpair => `${subpair[0]}:${subpair[1]}`;\nconst _addEmptyMod = mod => [[\"\", \"\"]].concat(mod);\n\n// expand ainsley.defs\nexport const expandDefs = (ainsley, ruleSet) => {\n  const pair = ruleSet[1].reduce(\n    (iters, pair) => [\n      iters[0].concat(pair[0].match(iteratorRegex) || []),\n      iters[1].concat(pair[1].match(iteratorRegex) || [])\n    ],\n    [[], []]\n  );\n\n  return map(\n    combinations(\n      map(pair[0].concat(pair[1]), iter =>\n        map(Object.keys(ainsley[iter]), abbr => [\n          iter,\n          abbr,\n          ainsley[iter][abbr]\n        ])\n      )\n    ),\n    perm => {\n      const clone = fastClone(ruleSet);\n      for (let i = 0; clone[0].includes(\"&\"); i++) {\n        clone[0] = clone[0].replace(\"&\", perm[i][1]);\n      }\n      for (let i = 0; i < clone[1].length; i++) {\n        const decl = clone[1][i];\n        while (perm.length > 0 && decl[0].includes(perm[0][0])) {\n          const first = perm.shift();\n          decl[0] = decl[0].replace(first[0], first[2]);\n        }\n      }\n      for (let i = 0; i < clone[1].length; i++) {\n        const decl = clone[1][i];\n        while (perm.length > 0 && decl[1].includes(perm[0][0])) {\n          const first = perm.shift();\n          decl[1] = decl[1].replace(first[0], first[2]);\n        }\n      }\n      return clone;\n    }\n  );\n};\n\n// expand ainsley.props\nexport const expandProps = pair => {\n  const propAbbrev = map(pair[0].split(\"-\"), _abbrev).join(\"\");\n  return map(pair[1], value => [\n    `${propAbbrev}${map(value.split(\" \"), w => w[0].toUpperCase()).join(\"\")}`,\n    [[pair[0], value]]\n  ]);\n};\n\n// compile ainsley to a simple stylesheet ast\nexport const ainsleyToAst = ainsley => {\n  const ast = [].concat(\n    flat(map(ainsley.defs || [], def => expandDefs(ainsley, def))),\n    flat(map(ainsley.props || [], expandProps)),\n    ainsley.raw || []\n  );\n  return flat(\n    map(combinations(map(ainsley.mods || [], _addEmptyMod)), comb =>\n      comb.reduce((ast, pair) => {\n        if (!pair[1]) {\n          return ast;\n        } else if (pair[1][0] === \"@\") {\n          return [\n            [\n              pair[1],\n              map(ast, subpair => [`${pair[0]}${subpair[0]}`, subpair[1]])\n            ]\n          ];\n        } else {\n          return map(ast, subpair => [\n            `${pair[0]}${subpair[0]}${pair[1]}`,\n            subpair[1]\n          ]);\n        }\n      }, ast)\n    )\n  );\n};\n\nexport const ruleToCSS = rule =>\n  rule[0][0] === \"@\"\n    ? `${rule[0]}{${astToCss(rule[1])}}`\n    : `.${rule[0]}{${map(rule[1], _expandDeclaration).join(\";\")}}`;\n\n// generate css from simple stylesheet ast\nexport const astToCss = ast => map(ast, ruleToCSS).join(\"\");\n\n// generate css from ainsley\nexport const ainsleyToCss = ainsley => astToCss(ainsleyToAst(ainsley));\n\n// insert ainsley into a dom\nexport const ainsleyInsert = (ainsley, stylesheet) => {\n  const ast = ainsleyToAst(ainsley);\n  for (let i = ast.length - 1; i >= 0; i--) {\n    stylesheet.insertRule(ruleToCSS(ast[i]), 0);\n  }\n};\n\n// callback for async scripts\nif (callback) callback(ainsleyToCss);\n"],"names":["fastClone","val","arr","len","length","i","push","map","fn","out","flat","concat","apply","combinations","mods","list","console","log","shift","opt","prev","propFragMap","flex","background","min","max","style","overflow","cursor","iteratorRegex","_abbrev","w","_expandDeclaration","subpair","_addEmptyMod","mod","expandDefs","ainsley","ruleSet","pair","reduce","iters","match","iter","Object","keys","abbr","perm","clone","includes","replace","decl","first","expandProps","propAbbrev","split","join","value","toUpperCase","ainsleyToAst","ast","defs","def","props","raw","comb","ruleToCSS","rule","astToCss","ainsleyToCss","callback","stylesheet","insertRule"],"mappings":"+IAAO,MAAMA,EAAYC,IACvB,GAAmB,iBAARA,EAAkB,OAAOA,EACpC,MAAMC,EAAM,GACNC,EAAMF,EAAIG,OAChB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAKE,IAAKH,EAAII,KAAKN,EAAUC,EAAII,KACrD,OAAOH,GAGIK,EAAM,CAACL,EAAKM,KACvB,MAAMC,EAAM,GACNN,EAAMD,EAAIE,OAChB,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAKE,IAAKI,EAAIH,KAAKE,EAAGN,EAAIG,KAC9C,OAAOI,GAGIC,EAAOR,GAAO,GAAGS,OAAOC,MAAM,GAAIV,GAElCW,EAAeC,IAC1B,IAAIC,EAAO,CAAC,IAEZ,IADAC,QAAQC,IAAIH,EAAKV,OAAQU,GAClBA,EAAKV,QACVW,EAAOL,EAAKI,EAAKI,QAAQX,IAAIY,GAAOJ,EAAKR,IAAIa,GAAQA,EAAKT,OAAO,CAACQ,OACpE,OAAOJ,GCnBIM,EAAc,CACzBC,KAAM,KACNC,WAAY,KACZC,IAAK,IACLC,IAAK,IACLC,MAAO,KACPC,SAAU,KACVC,OAAQ,MAGGC,EAAgB,eAGvBC,EAAUC,GAAKV,EAAYU,IAAMA,EAAE,GACnCC,EAAqBC,GAAW,GAAGA,EAAQ,MAAMA,EAAQ,KACzDC,EAAeC,GAAO,CAAC,CAAC,GAAI,KAAKxB,OAAOwB,GAGjCC,EAAa,CAACC,EAASC,KAClC,MAAMC,EAAOD,EAAQ,GAAGE,OACtB,CAACC,EAAOF,IAAS,CACfE,EAAM,GAAG9B,OAAO4B,EAAK,GAAGG,MAAMb,IAAkB,IAChDY,EAAM,GAAG9B,OAAO4B,EAAK,GAAGG,MAAMb,IAAkB,KAElD,CAAC,GAAI,KAGP,OAAOtB,EACLM,EACEN,EAAIgC,EAAK,GAAG5B,OAAO4B,EAAK,IAAKI,GAC3BpC,EAAIqC,OAAOC,KAAKR,EAAQM,IAAQG,GAAQ,CACtCH,EACAG,EACAT,EAAQM,GAAMG,OAIpBC,IACE,MAAMC,EAAQhD,EAAUsC,GACxB,IAAK,IAAIjC,EAAI,EAAG2C,EAAM,GAAGC,SAAS,KAAM5C,IACtC2C,EAAM,GAAKA,EAAM,GAAGE,QAAQ,IAAKH,EAAK1C,GAAG,IAE3C,IAAK,IAAIA,EAAI,EAAGA,EAAI2C,EAAM,GAAG5C,OAAQC,IAAK,CACxC,MAAM8C,EAAOH,EAAM,GAAG3C,GACtB,KAAO0C,EAAK3C,OAAS,GAAK+C,EAAK,GAAGF,SAASF,EAAK,GAAG,KAAK,CACtD,MAAMK,EAAQL,EAAK7B,QACnBiC,EAAK,GAAKA,EAAK,GAAGD,QAAQE,EAAM,GAAIA,EAAM,KAG9C,IAAK,IAAI/C,EAAI,EAAGA,EAAI2C,EAAM,GAAG5C,OAAQC,IAAK,CACxC,MAAM8C,EAAOH,EAAM,GAAG3C,GACtB,KAAO0C,EAAK3C,OAAS,GAAK+C,EAAK,GAAGF,SAASF,EAAK,GAAG,KAAK,CACtD,MAAMK,EAAQL,EAAK7B,QACnBiC,EAAK,GAAKA,EAAK,GAAGD,QAAQE,EAAM,GAAIA,EAAM,KAG9C,OAAOJ,KAMAK,EAAcd,IACzB,MAAMe,EAAa/C,EAAIgC,EAAK,GAAGgB,MAAM,KAAMzB,GAAS0B,KAAK,IACzD,OAAOjD,EAAIgC,EAAK,GAAIkB,GAAS,CAC3B,GAAGH,IAAa/C,EAAIkD,EAAMF,MAAM,KAAMxB,GAAKA,EAAE,GAAG2B,eAAeF,KAAK,MACpE,CAAC,CAACjB,EAAK,GAAIkB,OAKFE,EAAetB,IAC1B,MAAMuB,EAAM,GAAGjD,OACbD,EAAKH,EAAI8B,EAAQwB,MAAQ,GAAIC,GAAO1B,EAAWC,EAASyB,KACxDpD,EAAKH,EAAI8B,EAAQ0B,OAAS,GAAIV,IAC9BhB,EAAQ2B,KAAO,IAEjB,OAAOtD,EACLH,EAAIM,EAAaN,EAAI8B,EAAQvB,MAAQ,GAAIoB,IAAgB+B,GACvDA,EAAKzB,OAAO,CAACoB,EAAKrB,IACXA,EAAK,GAEgB,MAAfA,EAAK,GAAG,GACV,CACL,CACEA,EAAK,GACLhC,EAAIqD,EAAK3B,GAAW,CAAC,GAAGM,EAAK,KAAKN,EAAQ,KAAMA,EAAQ,OAIrD1B,EAAIqD,EAAK3B,GAAW,CACzB,GAAGM,EAAK,KAAKN,EAAQ,KAAKM,EAAK,KAC/BN,EAAQ,KAXH2B,EAcRA,MAKIM,EAAYC,GACR,MAAfA,EAAK,GAAG,GACJ,GAAGA,EAAK,MAAMC,EAASD,EAAK,OAC5B,IAAIA,EAAK,MAAM5D,EAAI4D,EAAK,GAAInC,GAAoBwB,KAAK,QAG9CY,EAAWR,GAAOrD,EAAIqD,EAAKM,GAAWV,KAAK,IAG3Ca,EAAehC,GAAW+B,EAAST,EAAatB,IAWzDiC,GAAUA,EAASD,yBARM,CAAChC,EAASkC,KACrC,MAAMX,EAAMD,EAAatB,GACzB,IAAK,IAAIhC,EAAIuD,EAAIxD,OAAS,EAAGC,GAAK,EAAGA,IACnCkE,EAAWC,WAAWN,EAAUN,EAAIvD,IAAK"}